// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apple_reversi.proto

/*
Package applereversi is a generated protocol buffer package.

It is generated from these files:
	apple_reversi.proto

It has these top-level messages:
	GameConfig
	Game
	GameJoined
	Move
*/
package applereversi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Color int32

const (
	Color_BLACK Color = 0
	Color_WHITE Color = 1
)

var Color_name = map[int32]string{
	0: "BLACK",
	1: "WHITE",
}
var Color_value = map[string]int32{
	"BLACK": 0,
	"WHITE": 1,
}

func (x Color) String() string {
	return proto.EnumName(Color_name, int32(x))
}
func (Color) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GameConfig struct {
	Color Color `protobuf:"varint,1,opt,name=color,enum=applereversi.Color" json:"color,omitempty"`
}

func (m *GameConfig) Reset()                    { *m = GameConfig{} }
func (m *GameConfig) String() string            { return proto.CompactTextString(m) }
func (*GameConfig) ProtoMessage()               {}
func (*GameConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GameConfig) GetColor() Color {
	if m != nil {
		return m.Color
	}
	return Color_BLACK
}

type Game struct {
	GameId int64 `protobuf:"varint,1,opt,name=gameId" json:"gameId,omitempty"`
}

func (m *Game) Reset()                    { *m = Game{} }
func (m *Game) String() string            { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()               {}
func (*Game) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Game) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type GameJoined struct {
	GameId   int64 `protobuf:"varint,1,opt,name=gameId" json:"gameId,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	Color    Color `protobuf:"varint,3,opt,name=color,enum=applereversi.Color" json:"color,omitempty"`
}

func (m *GameJoined) Reset()                    { *m = GameJoined{} }
func (m *GameJoined) String() string            { return proto.CompactTextString(m) }
func (*GameJoined) ProtoMessage()               {}
func (*GameJoined) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GameJoined) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GameJoined) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *GameJoined) GetColor() Color {
	if m != nil {
		return m.Color
	}
	return Color_BLACK
}

type Move struct {
	Row    int32 `protobuf:"varint,3,opt,name=row" json:"row,omitempty"`
	Column int32 `protobuf:"varint,4,opt,name=column" json:"column,omitempty"`
}

func (m *Move) Reset()                    { *m = Move{} }
func (m *Move) String() string            { return proto.CompactTextString(m) }
func (*Move) ProtoMessage()               {}
func (*Move) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Move) GetRow() int32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *Move) GetColumn() int32 {
	if m != nil {
		return m.Column
	}
	return 0
}

func init() {
	proto.RegisterType((*GameConfig)(nil), "applereversi.GameConfig")
	proto.RegisterType((*Game)(nil), "applereversi.Game")
	proto.RegisterType((*GameJoined)(nil), "applereversi.GameJoined")
	proto.RegisterType((*Move)(nil), "applereversi.Move")
	proto.RegisterEnum("applereversi.Color", Color_name, Color_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Reversi service

type ReversiClient interface {
	CreateGame(ctx context.Context, in *GameConfig, opts ...grpc.CallOption) (*GameJoined, error)
	JoinGame(ctx context.Context, in *Game, opts ...grpc.CallOption) (*GameJoined, error)
	SelectMove(ctx context.Context, opts ...grpc.CallOption) (Reversi_SelectMoveClient, error)
}

type reversiClient struct {
	cc *grpc.ClientConn
}

func NewReversiClient(cc *grpc.ClientConn) ReversiClient {
	return &reversiClient{cc}
}

func (c *reversiClient) CreateGame(ctx context.Context, in *GameConfig, opts ...grpc.CallOption) (*GameJoined, error) {
	out := new(GameJoined)
	err := grpc.Invoke(ctx, "/applereversi.Reversi/CreateGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reversiClient) JoinGame(ctx context.Context, in *Game, opts ...grpc.CallOption) (*GameJoined, error) {
	out := new(GameJoined)
	err := grpc.Invoke(ctx, "/applereversi.Reversi/JoinGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reversiClient) SelectMove(ctx context.Context, opts ...grpc.CallOption) (Reversi_SelectMoveClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Reversi_serviceDesc.Streams[0], c.cc, "/applereversi.Reversi/SelectMove", opts...)
	if err != nil {
		return nil, err
	}
	x := &reversiSelectMoveClient{stream}
	return x, nil
}

type Reversi_SelectMoveClient interface {
	Send(*Move) error
	Recv() (*Move, error)
	grpc.ClientStream
}

type reversiSelectMoveClient struct {
	grpc.ClientStream
}

func (x *reversiSelectMoveClient) Send(m *Move) error {
	return x.ClientStream.SendMsg(m)
}

func (x *reversiSelectMoveClient) Recv() (*Move, error) {
	m := new(Move)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Reversi service

type ReversiServer interface {
	CreateGame(context.Context, *GameConfig) (*GameJoined, error)
	JoinGame(context.Context, *Game) (*GameJoined, error)
	SelectMove(Reversi_SelectMoveServer) error
}

func RegisterReversiServer(s *grpc.Server, srv ReversiServer) {
	s.RegisterService(&_Reversi_serviceDesc, srv)
}

func _Reversi_CreateGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReversiServer).CreateGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/applereversi.Reversi/CreateGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReversiServer).CreateGame(ctx, req.(*GameConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reversi_JoinGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Game)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReversiServer).JoinGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/applereversi.Reversi/JoinGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReversiServer).JoinGame(ctx, req.(*Game))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reversi_SelectMove_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReversiServer).SelectMove(&reversiSelectMoveServer{stream})
}

type Reversi_SelectMoveServer interface {
	Send(*Move) error
	Recv() (*Move, error)
	grpc.ServerStream
}

type reversiSelectMoveServer struct {
	grpc.ServerStream
}

func (x *reversiSelectMoveServer) Send(m *Move) error {
	return x.ServerStream.SendMsg(m)
}

func (x *reversiSelectMoveServer) Recv() (*Move, error) {
	m := new(Move)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Reversi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "applereversi.Reversi",
	HandlerType: (*ReversiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGame",
			Handler:    _Reversi_CreateGame_Handler,
		},
		{
			MethodName: "JoinGame",
			Handler:    _Reversi_JoinGame_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SelectMove",
			Handler:       _Reversi_SelectMove_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "apple_reversi.proto",
}

func init() { proto.RegisterFile("apple_reversi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0xcd, 0xfe, 0x92, 0xf4, 0x57, 0x07, 0x91, 0xb0, 0x05, 0x09, 0x01, 0x45, 0xf6, 0x54, 0x3d,
	0x84, 0x52, 0x0f, 0x82, 0x37, 0x1b, 0x44, 0xe3, 0x9f, 0x4b, 0x14, 0x3c, 0xca, 0x9a, 0x8c, 0x25,
	0xb8, 0xc9, 0x86, 0x35, 0x56, 0xfc, 0x80, 0x7e, 0x2f, 0xd9, 0x49, 0xb0, 0xfe, 0xa9, 0xf4, 0x36,
	0xf3, 0xe6, 0xbd, 0x99, 0xf7, 0x76, 0x61, 0x24, 0x9b, 0x46, 0xe1, 0xbd, 0xc1, 0x05, 0x9a, 0xe7,
	0x32, 0x6e, 0x8c, 0x6e, 0x35, 0xdf, 0x24, 0xb0, 0xc7, 0xc4, 0x11, 0xc0, 0x99, 0xac, 0x30, 0xd1,
	0xf5, 0x63, 0x39, 0xe7, 0xfb, 0xe0, 0xe7, 0x5a, 0x69, 0x13, 0xb2, 0x3d, 0x36, 0xde, 0x9a, 0x8e,
	0xe2, 0xaf, 0xdc, 0x38, 0xb1, 0xa3, 0xac, 0x63, 0x88, 0x5d, 0xf0, 0xac, 0x90, 0x6f, 0xc3, 0x60,
	0x2e, 0x2b, 0x4c, 0x0b, 0xd2, 0xb8, 0x59, 0xdf, 0x89, 0xa7, 0x6e, 0xf1, 0x85, 0x2e, 0x6b, 0x2c,
	0xfe, 0x62, 0xf1, 0x08, 0x86, 0x8d, 0x92, 0x6f, 0x68, 0xd2, 0x22, 0xfc, 0x47, 0x93, 0xcf, 0x7e,
	0x69, 0xc6, 0x5d, 0x6b, 0x66, 0x02, 0xde, 0xb5, 0x5e, 0x20, 0x0f, 0xc0, 0x35, 0xfa, 0x95, 0x04,
	0x7e, 0x66, 0x4b, 0x7b, 0x38, 0xd7, 0xea, 0xa5, 0xaa, 0x43, 0x8f, 0xc0, 0xbe, 0x3b, 0xd8, 0x01,
	0x9f, 0x36, 0xf0, 0x0d, 0xf0, 0x67, 0x57, 0x27, 0xc9, 0x65, 0xe0, 0xd8, 0xf2, 0xee, 0x3c, 0xbd,
	0x3d, 0x0d, 0xd8, 0xf4, 0x9d, 0xc1, 0xff, 0xac, 0xbb, 0xc4, 0x67, 0x00, 0x89, 0x41, 0xd9, 0x22,
	0xe5, 0x0d, 0xbf, 0xdb, 0x58, 0x3e, 0x5e, 0xb4, 0x62, 0xd2, 0xa5, 0x17, 0x0e, 0x3f, 0x86, 0xa1,
	0xad, 0x69, 0x03, 0xff, 0xcd, 0x5b, 0xa3, 0x85, 0x1b, 0x54, 0x98, 0xb7, 0x14, 0xf1, 0x87, 0xda,
	0x62, 0xd1, 0x0a, 0x4c, 0x38, 0x63, 0x36, 0x61, 0x0f, 0x03, 0xfa, 0xf3, 0xc3, 0x8f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xdc, 0xfb, 0x5a, 0xd1, 0x0a, 0x02, 0x00, 0x00,
}
